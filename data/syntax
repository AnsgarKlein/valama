init_method
?_ $ReturnStatement|$AssignStatement|$CallStatement|$IfStatement|$DeclarationStatement

init_deep_space
?_ $UsingStatement



DeclarationStatement
var|$Type _ *word ?_ = ?_ $Object|$NewExpression ?_ ;

UsingStatement
using _ %Namespace{child} ?$NamespaceChild{child} ?_ ;

NamespaceChild : parent
. {parent}>Namespace{child} ?$NamespaceChild{child}


IfStatement
if ?_ ( ?_ $Object ?_ ==|<|>|<=|>= ?_ $Object ?_ )

CallStatement
$Object ?_ ;

AssignStatement
$Object ?_ = ?_ $Object|$NewExpression ?_ ;

ReturnStatement
return _ $Object|$NewExpression ?_ ;



NewExpression
new _ $Type ?_ ( ?$MethodParameters )



Type
$TypeClassStart|$TypeNamespaceStart

TypeClassStart
%Class{a} ?$TypeIterClass{a}

TypeNamespaceStart
%Namespace{a} $TypeIterNamespace{a}|$TypeIterClass{a}

TypeIterNamespace : parent
. {parent}>Namespace{child} $TypeIterNamespace{child}|$TypeIterClass{child}

TypeIterClass : parent
. {parent}>Class{child} ?$TypeIterClass{child}



Object
%Parameter{a}|%Variable{a} ?$ChildObject{a}

ChildObject : parent
. $ChildVar{parent}|$ChildMeth{parent}

ChildVar : parent
{parent}>Variable{child} ?$ChildObject{child}

ChildMeth : parent
{parent}>Method{mth} ( ?$MethodParameters ) ?$ChildObject{mth}



MethodParameters
$Object ?$MethodParametersIter

MethodParametersIter
_ , _ $MethodParameters
